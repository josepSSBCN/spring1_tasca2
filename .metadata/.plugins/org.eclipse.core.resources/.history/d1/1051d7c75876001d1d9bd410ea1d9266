package CinePackage;

import java.util.ArrayList;
import java.util.InputMismatchException;
import java.util.Scanner;

import ExcepcionsPackage.*;
import MainPackage.ToolsGlbl;

public class Cine {
	// ATRIBUTS
	protected byte numFiles;
	protected byte numButaquesFila;
	protected GestioButaques gestButaques;

	// CONSTRUCTOR
	public Cine() {
		gestButaques = new GestioButaques();

		demanarDadesInicials();

		// X afegir informació i no haver de picar-la cada cop que
		// depurem
		afegirInfoProva();
	}

	// MÈTODES PUBLICS
	public void iniciar() {
		// DECLARACIÓ VARIABLES
		boolean sortir = false;
		byte opcioSeleccionada = 0;

		// ACCIONS
		do {
			// 1) Crida al mètode que mostra el menú.
			opcioSeleccionada = gestioMenu();

			// 2) Executa el mètode de l'opció seleccionada.
			switch (opcioSeleccionada) {
			case 0:
				sortir = true;
				break;
			case 1:
				mostrarTotesButaquesReservades();
				break;
			case 2:
				mostrarButaquesPersona();
				break;
			case 3:
				reservarButaca();
				break;
			case 4:
				anularReservaButaca();
				break;
			case 5:
				anularReservesPersona();
				break;
			default:
			}
		} while (!sortir);

	}

	// METODES PRIVATS
	private void demanarDadesInicials() {
		// ACCIONS
		// 1) Demana el nº de files que tindrà el cinema
		this.numFiles = (byte) ToolsGlbl.Scanner_int("Quantes files té el cinema? (valor entre 1 - 127)", 1, 127);

		// 2) Demana el nº de butaques per fila del cinema
		this.numButaquesFila = (byte) ToolsGlbl.Scanner_int("Quantes butaques té el cinema? (valor entre 1 - 127)", 1,
				127);

	}

	private byte gestioMenu() {
		// DECLARACIÓ VARIABLES
		boolean sortir = false;
		byte opcioSeleccionada = 0;
		String text = "";
		Scanner myScan;

		// ACCIONS
		// 1) Es mostra el menú.
		text = "\r\n\r\n****MENÚ PRINCIPAL****\r\n" + "1.- Mostrar totes les butaques reservades.\r\n"
				+ "2.- Mostrar les butaques reservades per una persona.\r\n" + "3.- Reservar una butaca.\r\n"
				+ "4.- Anul·lar la reserva d’una butaca.\r\n" + "5.- Anul·lar totes les reserves d’una persona.\r\n"
				+ "0.- Sortir." + "\r\n\r\nSelecciona una de les opcions\r\n";
		System.out.println(text);

		// 2) Es demana que seleccioni una opció.
		do {
			try {
				myScan = new Scanner(System.in);
				opcioSeleccionada = myScan.nextByte();

				// Sols s'arriba aquí, si el format és correcte.
				if (opcioSeleccionada >= 0 & opcioSeleccionada <= 5) {
					sortir = true;
				} else {
					System.out.println("El valor seleccionat ha de ser entre 0 i 5");
				}
			} catch (InputMismatchException ex) {
				System.out.println("Error de format, torna-ho a provar");
			}
		} while (!sortir);

		// SORTIDA
		return opcioSeleccionada;
	}

	private void mostrarTotesButaquesReservades() {
		// DEFINICIO VARIABLES
		String text = "";
		ArrayList<Butaca> butaques;

		// ACCIONS
		text = "OPCIÓ 1: Mostrar totes les reserves de butaques.";
		butaques = new ArrayList<>(this.gestButaques.butaques);

		// 0) Comprovacions inicials
		if (!butaques.isEmpty()) {
			// 1) Recorre totes les butaques
			for (Butaca butaca : butaques) {
				text = String.format("%s\r\n%s", text, butaca.toString());
			}
		} else {
			text = "No hi ha butaques reservades";
		}

		// SORTIDA
		System.out.println(text + "\r\n");
		ToolsGlbl.polsarTeclaPerContinuar();

	}

	private void mostrarButaquesPersona() {
		// DEFINICIO VARIABLES
		String text = "", nomPersona = "";
		ArrayList<Butaca> butaques;

		// ACCIONS
		try {
			System.out.println("\r\nOPCIÓ 2: Mostrar les butaques reservades per una persona.");
			// 1) Entrar el nom de la persona
			nomPersona = introduirPersona();

			// 2) Recorre la llista de butaques cercant les butaques reservades per la
			// persona
			butaques = new ArrayList<>(this.gestButaques.getButaques());
			for (Butaca butaca : butaques) {
				if (butaca.nomPersona.equals(nomPersona)) {
					text = String.format("%s\r\n%s", text, butaca.toString());
				}
			}

			if (text.length() == 0) {
				text = String.format("La '%s' no té cap butaca reservada.", nomPersona);
			} else {
				text = String.format("El client '%s' té les següents butaques reservades..." + "\r\n%s", nomPersona,
						text);
			}

		} catch (ExcepcioNomPersonaIncorrecte ex) {
			text = ex.getMessage();
		}

		// SORTIDA
		System.out.println("\r\n" + text + "\r\n");
		ToolsGlbl.polsarTeclaPerContinuar();
	}

	private void reservarButaca() {
		// DEFINICIO VARIABLES
		boolean correcte = false;
		byte numFila = -1, numButaca = -1;
		String text = "", nomPersona = "";
		Butaca newButaca;

		// ACCIONS
		try {
			System.out.println("\r\nOPCIÓ 3: Reservar butaca");
			// 1) Es demana el número de fila
			numFila = introduirNumFila();

			// 2) Es demana el número de butaca
			numButaca = introduirNumSeient();

			// 3) Es demana el nom
			nomPersona = introduirPersona();

			// 4) Es crea una instància butaca amb les dades
			newButaca = new Butaca(numFila, numButaca, nomPersona);

			// 5) Es crida al mètode de la classe GestioButaques, que guarda la butaca
			correcte = this.gestButaques.AfegirButaca(newButaca);

			if (correcte) {
				text = "Reserva Realitzada Correctament!";
			}
		} catch (ExcepcioFilaIncorrecta ex) {
			text = ex.getMessage();
		} catch (ExcepcioSeientIncorrecte ex) {
			text = ex.getMessage();
		} catch (ExcepcioNomPersonaIncorrecte ex) {
			text = ex.getMessage();
		} catch (ExcepcioButacaOcupada ex) {
			text = ex.getMessage();
		} catch (Exception ex) {
			text = ex.getMessage();
		}

		// SORTIDA
		System.out.println("\r\n" + text + "\r\n");
		ToolsGlbl.polsarTeclaPerContinuar();
	}

	private void anularReservaButaca() {
		// DEFINICIO VARIABLES
		boolean resultat;
		byte numFila = -1, numButaca = -1;
		String text = "";

		// ACCIONS
		System.out.println("\r\nOPCIÓ 4: Anul·lar la reserva d'una butaca");

		try {
			// 1) Es demana la fila i la butaca
			numFila = introduirNumFila();
			numButaca = introduirNumSeient();

			// 2) Es crida al mètode que elimina la reserva
			resultat = this.gestButaques.eliminarButaca(numFila, numButaca);
			if (resultat) {
				text = String.format("\r\nLa butaca de la fila '%s' butaca '%s', ha sigut correctament alliberada!",
						numFila, numButaca);
			}

		} catch (ExcepcioFilaIncorrecta ex) {
			text = ex.getMessage();
		} catch (ExcepcioSeientIncorrecte ex) {
			text = ex.getMessage();
		} catch (ExcepcioButacaLliure ex) {
			text = ex.getMessage();
		}

		// SORTIDA
		System.out.println("\r\n" + text + "\r\n");
		ToolsGlbl.polsarTeclaPerContinuar();
	}

	private void anularReservesPersona() {
		// DEFINICIO VARIABLES
		int numButaquesEliminades = 0;
		String text = "", nomPersona = "";
		ArrayList<Butaca> butaques;

		// ACCIONS
		System.out.println("\r\nOPCIÓ 5: Anular la reserva d'una pesona");

		try {
			// 1) Es demana el nom de la perosona
			nomPersona = introduirPersona();

			// 2) Es repassen totes les butaques
			butaques = new ArrayList<>(this.gestButaques.butaques);
			for (int i = 0; i < butaques.size(); i++) {
				if (nomPersona.equals(butaques.get(i).nomPersona)) {
					this.gestButaques.eliminarButaca(butaques.get(i).numFila, butaques.get(i).numSeient);
					numButaquesEliminades++;
				}
			}

			// 3) Es comprova el resultat
			if (numButaquesEliminades == 1) {
				text = String.format("S'ha alliberat correctament la butaca del client '%s'.", nomPersona);
			} else if (numButaquesEliminades == 0) {
				text = String.format("El client '%s' no te cap butaca per alliberar.", nomPersona);
			} else {
				text = String.format("S'han alliberat correctament les %s butaques del client '%s'.",
						numButaquesEliminades, nomPersona);
			}

		} catch (ExcepcioNomPersonaIncorrecte ex) {
			text = ex.getMessage();
		} catch (ExcepcioButacaLliure ex) {
			text = ex.getMessage();
		}

		// SORTIDA
		System.out.println("\r\n" + text + "\r\n");
		ToolsGlbl.polsarTeclaPerContinuar();
	}

	private byte introduirNumFila() throws ExcepcioFilaIncorrecta {
		// DEFINICIO VARIABLES
		byte numFila = -1;

		// ACCIONS
		// 1) Es demana que introdueixi unnº de fila
		numFila = (byte) ToolsGlbl.Scanner_int("Introdueix el nº de la fila");

		// 2) Es comprova que sigui un número de fila correcte
		if (numFila < 1 | numFila > this.numFiles) {
			throw new ExcepcioFilaIncorrecta(numFila, (byte) 1, this.numFiles);
		}

		// SORTIDA
		return numFila;
	}

	private byte introduirNumSeient() throws ExcepcioSeientIncorrecte {
		// DEFINICIO VARIABLES
		byte numButaca = -1;

		// ACCIONS
		// 1) Es demana el nº de labutaca
		numButaca = (byte) ToolsGlbl.Scanner_int("Introdueix el nº de la butaca");

		// 2) Es comprova que sigui un número de fila correcte
		if (numButaca < 1 | numButaca > this.numButaquesFila) {
			throw new ExcepcioSeientIncorrecte(numButaca, (byte) 1, this.numButaquesFila);
		}

		// SORTIDA
		return numButaca;
	}

	private String introduirPersona() throws ExcepcioNomPersonaIncorrecte {
		// DEFINICIO VARIABLES
		String nomPersona = "";

		// ACCIONS
		// 1) Es demana el nom de la persona
		nomPersona = ToolsGlbl.Scanner_strg("Introdueix el nom de la persona", true);

		// 2) Es comprova que no contingui númmeros
		if (nomPersona.matches(".*[0-9].*") | nomPersona.isEmpty()) {
			throw new ExcepcioNomPersonaIncorrecte();
		}

		// SORTIDA
		return nomPersona;
	}

	/**
	 * L'única finalitat d'aquest mètode, és afegir alguna info, per estalviar temps
	 * en les depuracions
	 */
	private void afegirInfoProva() {
		// DEFINICIO VARIABLES
		Butaca butaca;

		// ACCIONS
		try {
			butaca = new Butaca((byte) 5, (byte) 5, "Rosa Martinez");
			this.gestButaques.AfegirButaca(butaca);
			butaca = new Butaca((byte) 5, (byte) 6, "Rosa Martinez");
			this.gestButaques.AfegirButaca(butaca);
			butaca = new Butaca((byte) 5, (byte) 7, "Rosa Martinez");
			this.gestButaques.AfegirButaca(butaca);

			butaca = new Butaca((byte) 1, (byte) 1, "Miquel Hernandez");
			this.gestButaques.AfegirButaca(butaca);
			butaca = new Butaca((byte) 1, (byte) 2, "Sandra Sabater");
			this.gestButaques.AfegirButaca(butaca);

			butaca = new Butaca((byte) 2, (byte) 1, "Lionel Messi");
			this.gestButaques.AfegirButaca(butaca);
			butaca = new Butaca((byte) 2, (byte) 2, "Cristiano Ronaldo");
			this.gestButaques.AfegirButaca(butaca);
			butaca = new Butaca((byte) 2, (byte) 3, "Pedri");
			this.gestButaques.AfegirButaca(butaca);
			butaca = new Butaca((byte) 2, (byte) 4, "Xavi Hernandez");
			this.gestButaques.AfegirButaca(butaca);
		} catch (ExcepcioButacaOcupada e) {
			System.out.println(e.getMessage());
		}

	}

}
